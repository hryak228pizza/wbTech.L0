// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: getLastOrders.sql

package db

import (
	"context"
)

const getLastOrders = `-- name: GetLastOrders :many
SELECT 
    order_uid,
    track_number,
    entry,
    locale,
    internal_signature,
    customer_id,
    delivery_service,
    shardkey,
    sm_id,
    date_created,
    oof_shard
FROM orders
ORDER BY date_created DESC
LIMIT $1
`

func (q *Queries) GetLastOrders(ctx context.Context, limit int32) ([]Order, error) {
	rows, err := q.db.QueryContext(ctx, getLastOrders, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Order
	for rows.Next() {
		var i Order
		if err := rows.Scan(
			&i.OrderUid,
			&i.TrackNumber,
			&i.Entry,
			&i.Locale,
			&i.InternalSignature,
			&i.CustomerID,
			&i.DeliveryService,
			&i.Shardkey,
			&i.SmID,
			&i.DateCreated,
			&i.OofShard,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
